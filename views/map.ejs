<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Kitchen Locations Map</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />

  <!-- Leaflet CSS & JS -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

  <style>
    #map { width: 100%; height: 600px; }
    body { margin: 0; font-family: Arial, sans-serif; }
  </style>
</head>
<body>
  <h2 style="text-align:center;">Kitchens Map</h2>
  <div id="map"></div>

  <script>
    const kitchens = <%- JSON.stringify(kitchens || []) %>;

    const map = L.map('map').setView([12.9716, 77.5946], 12); // Bangalore default

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    function addMarker(lat, lon, kitchen) {
      L.marker([lat, lon]).addTo(map)
        .bindPopup(`
          <strong>${kitchen.name || "Kitchen"}</strong><br>
          ${kitchen.address}<br>
          Capacity: ${kitchen.capacity || "N/A"}<br>
          Contact: ${kitchen.contact || "N/A"}
        `);
    }

    let bounds = L.latLngBounds();

    kitchens.forEach(kitchen => {
      if (kitchen.lat && kitchen.lon) {
        addMarker(kitchen.lat, kitchen.lon, kitchen);
        bounds.extend([kitchen.lat, kitchen.lon]);
      } else {
        console.warn(`No coordinates for: ${kitchen.name || "Unnamed Kitchen"}`);
      }
    });

    // Show current user's location
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const userLat = position.coords.latitude;
          const userLon = position.coords.longitude;

          L.marker([userLat, userLon], {
            icon: L.icon({
              iconUrl: "https://cdn-icons-png.flaticon.com/512/684/684908.png",
              iconSize: [30, 30]
            })
          }).addTo(map)
            .bindPopup("<strong>You are here</strong>")
            .openPopup();

          bounds.extend([userLat, userLon]);
          map.fitBounds(bounds);
        },
        (err) => {
          console.error("Error getting location:", err.message);
          if (kitchens.length > 0) map.fitBounds(bounds);
        }
      );
    } else {
      console.warn("Geolocation not supported.");
      if (kitchens.length > 0) map.fitBounds(bounds);
    }
  </script>
</body>
</html>
