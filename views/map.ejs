<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Kitchen Locations Map</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />

  <!-- Leaflet CSS & JS -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

  <style>
    #map {
      width: 100%;
      height: 600px;
    }
    body {
      margin: 0;
      font-family: Arial, sans-serif;
    }
  </style>
</head>
<body>
  <h2 style="text-align:center;">Kitchens Map</h2>
  <div id="map"></div>

  <script>
    // EJS: kitchens passed from backend
    const kitchens = JSON.parse('<%- JSON.stringify(kitchens || []) %>');

    // Initialize the map
    const map = L.map('map').setView([12.9716, 77.5946], 12); // Bangalore center

    // Add OpenStreetMap tiles
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    // Geocode and pin kitchen
    async function geocodeAndPin(kitchen) {
      if (!kitchen.address) return;

      const query = encodeURIComponent(kitchen.address + ', Bangalore, India'); // Add more context if needed

      try {
        const response = await fetch(`https://nominatim.openstreetmap.org/search?q=${query}&format=json&limit=1`);
        const data = await response.json();

        if (data.length > 0) {
          const lat = parseFloat(data[0].lat);
          const lon = parseFloat(data[0].lon);

          // Add marker to map
          L.marker([lat, lon]).addTo(map)
            .bindPopup(`
              <strong>${kitchen.name || "Kitchen"}</strong><br>
              ${kitchen.address}<br>
              Capacity: ${kitchen.capacity || "N/A"}<br>
              Contact: ${kitchen.contact || "N/A"}
            `);
        } else {
          console.warn("Could not geocode:", kitchen.address);
        }
      } catch (err) {
        console.error("Geocoding error for", kitchen.address, err);
      }
    }

    // Loop over kitchens
    kitchens.forEach(kitchen => geocodeAndPin(kitchen));
  </script>
</body>
</html>
